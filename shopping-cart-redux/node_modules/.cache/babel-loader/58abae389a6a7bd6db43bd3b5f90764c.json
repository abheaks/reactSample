{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState: {\n    contactDetailsProvided: false,\n    name: \"\",\n    email: \"\"\n  },\n  reducers: {\n    registerUser(state, action) {\n      const newItem = action.payload;\n      state.userList.push({\n        // id: newItem.id,\n        name: newItem.name,\n        email: newItem.email // password: newItem.password\n\n      });\n      state.contactDetailsProvided = true;\n    },\n\n    viewInput(state, action) {\n      const newItem = action.payload;\n      console.log(newItem);\n    }\n\n  }\n});\nexport const registerActions = registerSlice.actions;\nexport default registerSlice;","map":{"version":3,"sources":["/Users/abhijiths/Documents/abheaks/GitHub/reactSample/shopping-cart-redux/src/store/register-slice.js"],"names":["createSlice","registerSlice","name","initialState","contactDetailsProvided","email","reducers","registerUser","state","action","newItem","payload","userList","push","viewInput","console","log","registerActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,aAAa,GAAGD,WAAW,CAAC;AAChCE,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,sBAAsB,EAAE,KADZ;AAEZF,IAAAA,IAAI,EAAE,EAFM;AAGZG,IAAAA,KAAK,EAAE;AAHK,GAFkB;AAOhCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC1B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACAH,MAAAA,KAAK,CAACI,QAAN,CAAeC,IAAf,CAAoB;AAClB;AACAX,QAAAA,IAAI,EAAEQ,OAAO,CAACR,IAFI;AAGlBG,QAAAA,KAAK,EAAEK,OAAO,CAACL,KAHG,CAIlB;;AAJkB,OAApB;AAMAG,MAAAA,KAAK,CAACJ,sBAAN,GAA+B,IAA/B;AACD,KAVO;;AAWRU,IAAAA,SAAS,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD;;AAdO;AAPsB,CAAD,CAAjC;AAyBA,OAAO,MAAMO,eAAe,GAAGhB,aAAa,CAACiB,OAAtC;AAEP,eAAejB,aAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState: {\n    contactDetailsProvided: false,\n    name: \"\",\n    email: \"\",\n  },\n  reducers: {\n    registerUser(state, action) {\n      const newItem = action.payload;\n      state.userList.push({\n        // id: newItem.id,\n        name: newItem.name,\n        email: newItem.email,\n        // password: newItem.password\n      });\n      state.contactDetailsProvided = true;\n    },\n    viewInput(state, action) {\n      const newItem = action.payload;\n      console.log(newItem);\n    },\n  },\n});\n\nexport const registerActions = registerSlice.actions;\n\nexport default registerSlice;\n"]},"metadata":{},"sourceType":"module"}