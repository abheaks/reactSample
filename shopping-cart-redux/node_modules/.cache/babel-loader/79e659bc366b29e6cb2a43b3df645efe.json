{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    itemsList: [],\n    totalQuatity: 0,\n    showCart: false,\n    changed: false\n  },\n  reducers: {\n    replaceData(state, action) {\n      state.totalQuatity = action.payload.totalQuatity;\n      state.itemsList = action.payload.itemsList;\n    },\n\n    addToCart(state, action) {\n      state.changed = true;\n      const newItem = action.payload;\n      const existingItem = state.itemsList.find(item => item.id === newItem.id);\n\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      } else {\n        state.itemsList.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.name\n        });\n        state.totalQuatity++;\n      }\n    },\n\n    removeFromCart(state, action) {\n      state.changed = true;\n      const id = action.payload;\n      const existingItem = state.itemsList.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.itemsList = state.itemsList.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    },\n\n    setShowCart(state) {\n      state.showCart = !state.showCart;\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/Users/abhijiths/Documents/abheaks/GitHub/reactSample/shopping-cart/Redux-Shopping-Cart-App/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","itemsList","totalQuatity","showCart","changed","reducers","replaceData","state","action","payload","addToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeFromCart","filter","setShowCart","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE,EADD;AAEVC,IAAAA,YAAY,EAAE,CAFJ;AAGVC,IAAAA,QAAQ,EAAE,KAHA;AAIVC,IAAAA,OAAO,EAAE;AAJC,GAFY;AAQ1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAAP,CAAeP,YAApC;AACAK,MAAAA,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACC,OAAP,CAAeR,SAAjC;AACH,KAJK;;AAKNS,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACH,OAAN,GAAgB,IAAhB;AACA,YAAMO,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACN,SAAN,CAAgBY,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAAnD,CAArB;;AACA,UAAIH,YAAJ,EAAkB;AACdA,QAAAA,YAAY,CAACI,QAAb;AACAJ,QAAAA,YAAY,CAACK,UAAb,IAA2BN,OAAO,CAACO,KAAnC;AAEH,OAJD,MAIO;AACHX,QAAAA,KAAK,CAACN,SAAN,CAAgBkB,IAAhB,CAAqB;AACjBJ,UAAAA,EAAE,EAAEJ,OAAO,CAACI,EADK;AAEjBG,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFE;AAGjBF,UAAAA,QAAQ,EAAE,CAHO;AAIjBC,UAAAA,UAAU,EAAEN,OAAO,CAACO,KAJH;AAKjBnB,UAAAA,IAAI,EAAEY,OAAO,CAACZ;AALG,SAArB;AAOAQ,QAAAA,KAAK,CAACL,YAAN;AACH;AACJ,KAvBK;;AAwBNkB,IAAAA,cAAc,CAACb,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACH,OAAN,GAAgB,IAAhB;AACA,YAAMW,EAAE,GAAGP,MAAM,CAACC,OAAlB;AAEA,YAAMG,YAAY,GAAGL,KAAK,CAACN,SAAN,CAAgBY,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAA3C,CAArB;;AACA,UAAIH,YAAY,CAACI,QAAb,KAA0B,CAA9B,EAAiC;AAC7BT,QAAAA,KAAK,CAACN,SAAN,GAAkBM,KAAK,CAACN,SAAN,CAAgBoB,MAAhB,CAAwBP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAA7C,CAAlB;AACH,OAFD,MAEO;AACHH,QAAAA,YAAY,CAACI,QAAb;AACAJ,QAAAA,YAAY,CAACK,UAAb,IAA2BL,YAAY,CAACM,KAAxC;AACH;AACJ,KAnCK;;AAoCNI,IAAAA,WAAW,CAACf,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACJ,QAAN,GAAiB,CAACI,KAAK,CAACJ,QAAxB;AACH;;AAtCK;AARgB,CAAD,CAA7B;AAoDA,OAAO,MAAMoB,WAAW,GAAGzB,SAAS,CAAC0B,OAA9B;AAEP,eAAe1B,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        itemsList: [],\n        totalQuatity: 0,\n        showCart: false,\n        changed: false\n    },\n    reducers: {\n        replaceData(state, action) {\n            state.totalQuatity = action.payload.totalQuatity;\n            state.itemsList = action.payload.itemsList;\n        },\n        addToCart(state, action) {\n            state.changed = true\n            const newItem = action.payload;\n            const existingItem = state.itemsList.find((item) => item.id === newItem.id);\n            if (existingItem) {\n                existingItem.quantity++;\n                existingItem.totalPrice += newItem.price;\n\n            } else {\n                state.itemsList.push({\n                    id: newItem.id,\n                    price: newItem.price,\n                    quantity: 1,\n                    totalPrice: newItem.price,\n                    name: newItem.name\n                })\n                state.totalQuatity++;\n            }\n        },\n        removeFromCart(state, action) {\n            state.changed = true\n            const id = action.payload;\n\n            const existingItem = state.itemsList.find((item) => item.id === id)\n            if (existingItem.quantity === 1) {\n                state.itemsList = state.itemsList.filter((item) => item.id !== id)\n            } else {\n                existingItem.quantity--;\n                existingItem.totalPrice -= existingItem.price;\n            }\n        },\n        setShowCart(state) {\n            state.showCart = !state.showCart;\n        },\n    },\n});\n\n\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}