{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    itemsList: [],\n    totalQuatity: 0,\n    showCart: false\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.itemsList.find(item => item.id === newItem.id);\n\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      } else {\n        state.itemsList.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.name\n        });\n        state.totalQuatity++;\n      }\n    },\n\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.itemsList.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.itemsList = state.itemsList.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    },\n\n    setShowCart(state) {\n      state.showCart = !state.showCart;\n    }\n\n  }\n});\n\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiSliceActions.showNotification({\n      open: true,\n      message: \"Sending request\",\n      type: \"warning\"\n    }));\n\n    const sendRequest = async () => {\n      dispatch(uiSliceActions.showNotification({\n        open: true,\n        message: \"Sending request dab\",\n        type: \"success\"\n      }));\n      const res = await fetch('https://redux-http-2235a-default-rtdb.asia-southeast1.firebasedatabase.app/cartItems.json', {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      const data = await res.json();\n    };\n\n    try {\n      await sendRequest();\n    } catch (err) {\n      dispatch(uiSliceActions.showNotification({\n        open: true,\n        message: \"Sending request Error\",\n        type: \"Error\"\n      }));\n    }\n  };\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/Users/abhijiths/Documents/abheaks/GitHub/reactSample/shopping-cart/Redux-Shopping-Cart-App/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","itemsList","totalQuatity","showCart","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","quantity","totalPrice","price","push","removeFromCart","filter","setShowCart","sendCartData","cart","dispatch","uiSliceActions","showNotification","open","message","type","sendRequest","res","fetch","method","body","JSON","stringify","data","json","err","cartActions","actions"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        itemsList: [],\n        totalQuatity: 0,\n        showCart: false\n    },\n    reducers: {\n        addToCart(state, action) {\n            const newItem = action.payload;\n            const existingItem = state.itemsList.find((item) => item.id === newItem.id);\n            if (existingItem) {\n                existingItem.quantity++;\n                existingItem.totalPrice += newItem.price;\n\n            } else {\n                state.itemsList.push({\n                    id: newItem.id,\n                    price: newItem.price,\n                    quantity: 1,\n                    totalPrice: newItem.price,\n                    name: newItem.name\n                })\n                state.totalQuatity++;\n            }\n        },\n        removeFromCart(state, action) {\n            const id = action.payload;\n\n            const existingItem = state.itemsList.find((item) => item.id === id)\n            if (existingItem.quantity === 1) {\n                state.itemsList = state.itemsList.filter((item) => item.id !== id)\n            } else {\n                existingItem.quantity--;\n                existingItem.totalPrice -= existingItem.price;\n            }\n        },\n        setShowCart(state) {\n            state.showCart = !state.showCart;\n        },\n    },\n});\n\nconst sendCartData = (cart) => {\n    return async (dispatch) => {\n        dispatch(uiSliceActions.showNotification({\n            open: true,\n            message: \"Sending request\",\n            type: \"warning\"\n        }));\n        const sendRequest = async () => {\n\n            dispatch(uiSliceActions.showNotification({\n                open: true,\n                message: \"Sending request dab\",\n                type: \"success\"\n            }));\n            const res = await fetch('https://redux-http-2235a-default-rtdb.asia-southeast1.firebasedatabase.app/cartItems.json', {\n                method: \"PUT\",\n                body: JSON.stringify(cart)\n            });\n            const data = await res.json();\n        };\n\n        try {\n            await sendRequest();\n        }\n        catch (err) {\n            dispatch(uiSliceActions.showNotification({\n                open: true,\n                message: \"Sending request Error\",\n                type: \"Error\"\n            }));\n        }\n\n    }\n}\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}